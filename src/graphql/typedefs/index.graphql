scalar Upload

type Query {
  getAllTemplates(
    templateId: Int
    isActive: Boolean
    page: Int
    size: Int
    searchColumns: String
    searchParam: String
    orderAsc: String
    orderDesc: String
    createdDate: String
  ): GetAllTemplate
  getActiveTemplates(id: ID): GetAllTemplate
  getAllForms(template_id: ID): [get_all_forms]
  getRequiredFields(pageId: ID): [RequiredFields]

  getAllRoles(
    roleId: Int
    isActive: Boolean
    page: Int
    size: Int
    searchColumns: String
    searchParam: String
    orderAsc: String
    orderDesc: String
    createdDate: String
  ): GetAllRoles
  getAllCabinets(
    cabinetId: Int
    isActive: Boolean
    page: Int
    size: Int
    searchColumns: String
    searchParam: String
    orderAsc: String
    orderDesc: String
  ): GetAllCabinet
  getCabinet(id: ID): [cabinet_master]

  getAllFolders(
    folderId: Int
    isActive: Boolean
    page: Int
    size: Int
    searchColumns: String
    searchParam: String
    orderAsc: String
    orderDesc: String
  ): GetAllFolder
  getFolder(id: ID): [folder_master]

  getAllSubFolders(
    subFolderId: Int
    isActive: Boolean
    page: Int
    size: Int
    searchColumns: String
    searchParam: String
    orderAsc: String
    orderDesc: String
  ): GetAllSubFolder
  getSubFolder(id: ID): [sub_folder_master]

  getFolderWithCabinet(id: ID): [folder_master_with_cabinet]
  getFoldersInCabinet(cabinetId: ID): [folder_master]
  getSubFolderWithFolderAndCabinet(id: ID): [sub_folder_master_with_folder_and_cabinet]

  getAllSubFolderMappings(id: ID): [subFolderMapping]
  getSubFoldersOfUser(userId: ID): [subFolderMapping]

  getAllUsers(userId: ID): [user]
}

type Mutation {
  addTemplate(addTemplate: addTemplate): MutationResponse
  editTemplate(id: Int, editTemplate: addTemplate): MutationResponse
  deleteTemplate(id: Int): MutationResponse

  addRequiredFields(AddRequiredFields: RequiredFieldsInput): MutationResponse
  editRequiredFields(EditRequiredFields: RequiredFieldsInput): MutationResponse
  deleteRequiredFields(pageId: Int): MutationResponse

  addRole(addRole: AddRole): MutationResponse
  editRole(id: Int, editRole: AddRole): MutationResponse
  deleteRole(id: Int): MutationResponse

  addForm(add_forms: add_forms): MutationResponse
  # editForm(edit_form: add_forms): [String]
  deleteForm(form_id: Int): MutationResponse

  addCabinet(add_cabinet_master: add_cabinet_master): MutationResponse
  editCabinet(edit_cabinet_master: edit_cabinet_master): MutationResponse
  deleteCabinet(id: ID): MutationResponse
  changeActiveStatusOfCabinet(id: ID, isActive: Boolean): MutationResponse

  addFolder(add_folder_master: add_folder_master): MutationResponse
  editFolder(edit_folder_master: edit_folder_master): MutationResponse
  deleteFolder(id: ID): MutationResponse
  changeActiveStatusOfFolder(id: ID, isActive: Boolean): MutationResponse

  addSubFolder(add_sub_folder_master: add_sub_folder_master): MutationResponse
  editSubFolder(edit_sub_folder_master: edit_sub_folder_master): MutationResponse
  deleteSubFolder(id: ID): MutationResponse
  changeActiveStatusOfSubFolder(id: ID, isActive: Boolean): MutationResponse

  addSubFolderMapping(addSubFolderMapping: addSubFolderMapping): MutationResponse
  deleteSubFolderMapping(deleteSubFolderMapping: deleteSubFolderMapping): String

  login(loginCredentials: loginCredentials): authStatus
  changePassword(changePasswordCredentials: changePasswordCredentials): String
  resetPasswordThroughEmail(email_id: String): String
}
